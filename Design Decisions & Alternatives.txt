In design decisions I tried to follow the best practices for REST API wherever possible. My APIs are at Level 2 as 
per Richardson Maturity Model.

The major highlights are following.

- Every customer will have a unique id that will be generated by server. That is why I have used POST for creation
as my creation is not idempotent.

- basicAuth added as a Security Scheme so that every request to the APIs is authenticated as well as authorised.

- Query Params (offset, limit) and Response Header (X-Total-Count) added for GET method to give the choice of pagination 
in the response. Two filters also added in Query Params to filter the data.

- Handling errors through custom error messages and codes which are mapped based on HTTP status codes.


Alternatives:
- One of the main alternative that can be considered is to use HATEOAS. This way client won't need to hardcode all the
URI's and will be navigated the links in the response. 